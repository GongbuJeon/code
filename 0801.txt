import './App.css';
import { React, useState, useRef, useEffect } from 'react';


function App() {

  // 임시 저장 state
  let [a, setA] = useState('');
  let [b, setB] = useState('');  
  const intervalRef = useRef(null);
  const readingIndexRef = useRef(0);

  const [objarr, setObjarr] = useState([]);
  // 로컬스토리지에 데이터가 없으면 밑의 코드가 에러를 일으킴
  // 조건문을 써서 만들기

  useEffect(()=>{

    if (localStorage.getItem('data') !== null ) {
      setObjarr(JSON.parse(localStorage.getItem('data')));
    }

    return ()=>{
      console.log(localStorage.getItem('data'))
    }
  }, [])

  const readArray = ()=> {
    const currentIndex = readingIndexRef.current;
    if (currentIndex < objarr.length) {
      const reading = `${objarr[currentIndex].question}  ${objarr[currentIndex].answer}.`
      const utterance = new SpeechSynthesisUtterance(reading);
      window.speechSynthesis.speak(utterance);

      intervalRef.current = setTimeout(() => {
        readingIndexRef.current = currentIndex + 1;
        readArray();
      }, 2000);
    }

    else {
      readingIndexRef.current = 0;
    }
  }

  return (
    <>
      <div>

        <button>분류하기</button>

      </div>


      <div>

        <input
          placeholder='질문'
          value={a}
          onChange={(e) => { setA(e.target.value) }}
        ></input>

        <button onClick={() => {

          const obj = {'question' : a, 'answer' : b}

          const aa = [...objarr]
          aa.push(obj);
          setObjarr(aa);
          objarr.push(obj);

          localStorage.setItem('data', JSON.stringify(objarr));

          // 입력창 초기화
          setA('')
          setB('')
          console.log(a)

        }}>입력하기</button>


        <button onClick={()=>{
          readArray()
        }}>음성</button>

      </div>


      <div>

        <input placeholder='답'
          value={b}
          onChange={(e) => { setB(e.target.value) }}
        ></input>

      </div>

        {/* 배열의 수만큼 반복해서 안의 내용을 화면에 보여주기 */}

        <ol>
          {objarr.map((item, index) => (
            <li key={index}>{objarr[index].question}</li>
          ))}
        </ol>

        <ol>
          {objarr.map((item, index) => (
            <li key={index}>{objarr[index].answer}</li>
          ))}
        </ol>

    </>
  );
}

export default App;

// [{question : a, answer : b}, {question : c, answer : d}]
// 순서대로 혹은 랜덤하게
// 전체 반복재생 가능 ??
// 그룹핑 ?? 
